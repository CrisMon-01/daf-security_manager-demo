# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     ***REMOVED***://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See ***REMOVED***://www.playframework.com/documentation/latest/ApplicationSecret for more details.

include "../application.conf"

#only in test ***REMOVED***ironment!
play.ws.ssl.loose.acceptAnyCertificate="true"
play.ws.ssl.loose.allowWeakCiphers="true"

kylo{
  url = "***REMOVED***://tba-kylo-ui.default.svc.cluster.local:8400"
  user = "dladmin"
#  userpwd = "xxxxxxx"
}

//sftp.host.external="sftp-test.***REMOVED***.it"
sftp.host.external="sftp.***REMOVED***.test"
sftp.host.internal="nifi.***REMOVED***.test"

hadoop.url = "***REMOVED***://master.novalocal:50470"

pac4j.authenticator = "ldap"
pac4j.ldap.url = "ldap://idm.***REMOVED***.test:636"
pac4j.ldap.base_user_dn = "cn=users,cn=accounts,dc=***REMOVED***,dc=gov,dc=it"
pac4j.ldap.login_attribute = "mail"
pac4j.ldap.username_attribute = "uid"
pac4j.ldap.bind_dn =  "uid=application,cn=users,cn=accounts,dc=***REMOVED***,dc=gov,dc=it"
#pac4j.ldap.bind_pwd = "xxxxxx"


ipa {
  url = "***REMOVED***://idm.***REMOVED***.test"
  user = "admin"
#  userpwd = "xxxxxx"
}

smtp {
  server = "smtp.gmail.com"
  port = 587
  login = "mail***REMOVED***2017@gmail.com"
  #pwd = "birra***REMOVED***"
  sender = "mail***REMOVED***2017@gmail.com"
  #for development purpose
  testMail = "test"
}


app.registration.url="***REMOVED***://dataportal-private.***REMOVED***.***REMOVED***.test/#/confirmregistration?t="
app.resetpwd.url="***REMOVED***://dataportal-private.***REMOVED***.***REMOVED***.test/#/resetpwd?t="

ckan{
  url = "***REMOVED***://ckan.***REMOVED***.***REMOVED***.test"
  adminUser="ckanadmin"
#  adminPwd="xxxxxx"
}

ckan-geo{
  url = "***REMOVED***://ckan-geo.***REMOVED***.***REMOVED***.test"
  adminUser="ckanadmin"
  #  adminPwd="xxxxxx"
}

metabase{
  url= "***REMOVED***://metabase.***REMOVED***.***REMOVED***.test"
  adminUser="superset_admin"
#  adminPwd="xxxxxx"
}

superset{
  url="***REMOVED***://bi.dataportal.***REMOVED***.***REMOVED***.test"
  openUrl="***REMOVED***://bi.open.***REMOVED***.***REMOVED***.test"
  adminUser="superset_admin"
  openDataUser="open_data_user"
#  openDataPwd="xxxxxx"
#  adminPwd="xxxxxx"
  #test
  #dbUri="postgresql+psycopg2://superset:superset@postgressuperset:5432/superset"

  #production
  dbUri="impala://slave1.novalocal:21050"
}

jupyter.url="***REMOVED***://datascience.***REMOVED***.***REMOVED***.test"

grafana {
  url = "***REMOVED***://grafana.***REMOVED***.***REMOVED***.test"
  adminUser="admin"
#  adminPwd="admin"
}

impala {
  server = "slave1.novalocal:21050"
  keyStorePath = "cert/master-impala.jks"
  adminUser = "***REMOVED***"
  # adminUserPwd = "xx"
  # keyStorePwd = "xxx"
}

hdfs {
  user = "hdfs_srv_user"
  #userPwd = "xx"
}


mongo {
  host = "ckan.default.svc.cluster.local"
  port = 27017
  database = "ckan"
  collection = "catalog_test"
  username = "ckan"
  #password = "ckan"
}

